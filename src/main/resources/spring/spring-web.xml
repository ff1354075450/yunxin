<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
<!-- 配置springMvc -->
    <!-- 1:开启springMvc注解模式 -->
    <!-- 简化配置：
        （1）自动注册defaultAnnotationHandlerMapping,AnnotationMethodHandlerAdapter
                   使用注解驱动的handler映射          基于注解方法的handler适配器
        （2）默认提供一系列的：数据绑定，数字和日期的format @NumberFormat,@DataTimeFormat,
        xml,json默认读写支持。
        -->
    <mvc:annotation-driven/>
    <!-- servlet-mapping 映射的路径：“/” -->
    <!-- 静态资源配置，默认servlet配置
        1：加入对静态资源的处理；js,css,图片
        2：允许使用一个/做整体映射
     -->
    <mvc:default-servlet-handler/>

    <context:component-scan base-package="com.yunxin" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- AOP式方法级权限检查 使用注解方式检查权限 -->
    <aop:config proxy-target-class="true"></aop:config>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!--拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 拦截所有URL中包含/user/的请求 -->
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/**/fonts/*"/>
            <bean class="com.yunxin.api.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>



    <!-- 2:配置jsp，显示viewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 4:扫描web相关的bean -->
    <context:component-scan base-package="com.yunxin.web"/>
    <context:component-scan base-package="com.yunxin.api"/>
    <context:component-scan base-package="com.yunxin.auth"/>
    <!--系统启动-->
    <context:component-scan base-package="com.yunxin.init"/>

    <!-- 控制器异常处理 -->
    <bean id="exceptionHandlerExceptionResolver" class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
    </bean>
    <bean class="com.yunxin.exception.DefaultExceptionHandler"/>

</beans>